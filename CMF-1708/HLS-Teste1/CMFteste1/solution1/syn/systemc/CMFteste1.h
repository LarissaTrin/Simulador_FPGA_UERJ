// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _CMFteste1_HH_
#define _CMFteste1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct CMFteste1 : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > Entrada1_V;
    sc_in< sc_lv<32> > Entrada2_V;
    sc_out< sc_lv<32> > Saida1_V;
    sc_out< sc_logic > Saida1_V_ap_vld;
    sc_out< sc_lv<32> > Saida2_V;
    sc_out< sc_logic > Saida2_V_ap_vld;


    // Module declarations
    CMFteste1(sc_module_name name);
    SC_HAS_PROCESS(CMFteste1);

    ~CMFteste1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<33> > ret_V_fu_56_p2;
    sc_signal< sc_lv<33> > ret_V_reg_111;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > lhs_V_fu_52_p0;
    sc_signal< sc_lv<33> > lhs_V_fu_52_p1;
    sc_signal< sc_lv<32> > tmp_cast_fu_66_p0;
    sc_signal< sc_lv<32> > r_V_fu_69_p0;
    sc_signal< sc_lv<56> > tmp_cast_fu_66_p1;
    sc_signal< sc_lv<32> > r_V_fu_69_p1;
    sc_signal< sc_lv<56> > r_V_fu_69_p2;
    sc_signal< sc_lv<33> > r_V_1_fu_89_p0;
    sc_signal< sc_lv<32> > r_V_1_fu_89_p1;
    sc_signal< sc_lv<56> > r_V_1_fu_89_p2;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_state2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<33> ap_const_lv33_1851EB8;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_37;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Saida1_V();
    void thread_Saida1_V_ap_vld();
    void thread_Saida2_V();
    void thread_Saida2_V_ap_vld();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_lhs_V_fu_52_p0();
    void thread_lhs_V_fu_52_p1();
    void thread_r_V_1_fu_89_p0();
    void thread_r_V_1_fu_89_p1();
    void thread_r_V_1_fu_89_p2();
    void thread_r_V_fu_69_p0();
    void thread_r_V_fu_69_p1();
    void thread_r_V_fu_69_p2();
    void thread_ret_V_fu_56_p2();
    void thread_tmp_cast_fu_66_p0();
    void thread_tmp_cast_fu_66_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
