

================================================================
== Vivado HLS Report for 'CMFfixMult'
================================================================
* Date:           Sat Aug 15 12:45:39 2020

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        CMF-fixMult
* Solution:       solution1
* Product family: aartix7
* Target device:  xa7a12tcsg325-1q


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.180|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    1|    1|    1|    1|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.18>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%EntradaB2_V_read = call i9 @_ssdm_op_Read.ap_auto.i9(i9 %EntradaB2_V)" [CMFfixmult.cpp:9]   --->   Operation 3 'read' 'EntradaB2_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%EntradaB1_V_read = call i9 @_ssdm_op_Read.ap_auto.i9(i9 %EntradaB1_V)" [CMFfixmult.cpp:9]   --->   Operation 4 'read' 'EntradaB1_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%EntradaA2_V_read = call i18 @_ssdm_op_Read.ap_auto.i18(i18 %EntradaA2_V)" [CMFfixmult.cpp:9]   --->   Operation 5 'read' 'EntradaA2_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%EntradaA1_V_read = call i18 @_ssdm_op_Read.ap_auto.i18(i18 %EntradaA1_V)" [CMFfixmult.cpp:9]   --->   Operation 6 'read' 'EntradaA1_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%r_V = sext i18 %EntradaA1_V_read to i36" [CMFfixmult.cpp:13]   --->   Operation 7 'sext' 'r_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp = sext i18 %EntradaA2_V_read to i36" [CMFfixmult.cpp:13]   --->   Operation 8 'sext' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (7.18ns) (root node of the DSP)   --->   "%r_V_4 = mul nsw i36 %tmp, %r_V" [CMFfixmult.cpp:13]   --->   Operation 9 'mul' 'r_V_4' <Predicate = true> <Delay = 7.18> <Core = "DSP48">   --->   Core 65 'DSP48' <Latency = 0> <II = 1> <Delay = 7.18> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %r_V_4, i32 35)" [CMFfixmult.cpp:13]   --->   Operation 10 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_Val2_1 = call i18 @_ssdm_op_PartSelect.i18.i36.i32.i32(i36 %r_V_4, i32 12, i32 29)" [CMFfixmult.cpp:13]   --->   Operation 11 'partselect' 'p_Val2_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %r_V_4, i32 29)" [CMFfixmult.cpp:13]   --->   Operation 12 'bitselect' 'p_Result_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_Result_2 = call i6 @_ssdm_op_PartSelect.i6.i36.i32.i32(i36 %r_V_4, i32 30, i32 35)" [CMFfixmult.cpp:13]   --->   Operation 13 'partselect' 'p_Result_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%r_V_2 = sext i9 %EntradaB1_V_read to i18" [CMFfixmult.cpp:14]   --->   Operation 14 'sext' 'r_V_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_6 = sext i9 %EntradaB2_V_read to i18" [CMFfixmult.cpp:14]   --->   Operation 15 'sext' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (4.46ns)   --->   "%r_V_5 = mul i18 %tmp_6, %r_V_2" [CMFfixmult.cpp:14]   --->   Operation 16 'mul' 'r_V_5' <Predicate = true> <Delay = 4.46> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 4.46> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i18P(i18* %SaidaA2_V, i18 %r_V_5)" [CMFfixmult.cpp:14]   --->   Operation 17 'write' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%p_Result_3 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %r_V_5, i32 17)" [CMFfixmult.cpp:15]   --->   Operation 18 'bitselect' 'p_Result_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%p_Val2_3 = call i9 @_ssdm_op_PartSelect.i9.i18.i32.i32(i18 %r_V_5, i32 6, i32 14)" [CMFfixmult.cpp:15]   --->   Operation 19 'partselect' 'p_Val2_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%p_Result_4 = call i1 @_ssdm_op_BitSelect.i1.i18.i32(i18 %r_V_5, i32 14)" [CMFfixmult.cpp:15]   --->   Operation 20 'bitselect' 'p_Result_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%p_Result_5 = call i3 @_ssdm_op_PartSelect.i3.i18.i32.i32(i18 %r_V_5, i32 15, i32 17)" [CMFfixmult.cpp:15]   --->   Operation 21 'partselect' 'p_Result_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (1.18ns)   --->   "%p_not2 = icmp ne i3 %p_Result_5, 0" [CMFfixmult.cpp:15]   --->   Operation 22 'icmp' 'p_not2' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (0.00ns) (grouped into LUT with out node overflow_1)   --->   "%brmerge4 = or i1 %p_Result_4, %p_not2" [CMFfixmult.cpp:15]   --->   Operation 23 'or' 'brmerge4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node overflow_1)   --->   "%tmp_s = xor i1 %p_Result_3, true" [CMFfixmult.cpp:15]   --->   Operation 24 'xor' 'tmp_s' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.94ns) (out node of the LUT)   --->   "%overflow_1 = and i1 %brmerge4, %tmp_s" [CMFfixmult.cpp:15]   --->   Operation 25 'and' 'overflow_1' <Predicate = true> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node underflow_1)   --->   "%newsignbit_i_i_i_i1 = xor i1 %p_Result_4, true" [CMFfixmult.cpp:15]   --->   Operation 26 'xor' 'newsignbit_i_i_i_i1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (1.18ns)   --->   "%p_not3 = icmp ne i3 %p_Result_5, -1" [CMFfixmult.cpp:15]   --->   Operation 27 'icmp' 'p_not3' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns) (grouped into LUT with out node underflow_1)   --->   "%brmerge5 = or i1 %p_not3, %newsignbit_i_i_i_i1" [CMFfixmult.cpp:15]   --->   Operation 28 'or' 'brmerge5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.94ns) (out node of the LUT)   --->   "%underflow_1 = and i1 %brmerge5, %p_Result_3" [CMFfixmult.cpp:15]   --->   Operation 29 'and' 'underflow_1' <Predicate = true> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 5.13>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i18 %EntradaA1_V), !map !53"   --->   Operation 30 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i18 %EntradaA2_V), !map !59"   --->   Operation 31 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i9 %EntradaB1_V), !map !63"   --->   Operation 32 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i9 %EntradaB2_V), !map !67"   --->   Operation 33 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i18* %SaidaA1_V), !map !71"   --->   Operation 34 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i18* %SaidaA2_V), !map !77"   --->   Operation 35 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i9* %SaidaB1_V), !map !81"   --->   Operation 36 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @CMFfixMult_str) nounwind"   --->   Operation 37 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (1.45ns)   --->   "%p_not = icmp ne i6 %p_Result_2, 0" [CMFfixmult.cpp:13]   --->   Operation 38 'icmp' 'p_not' <Predicate = true> <Delay = 1.45> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node overflow)   --->   "%brmerge = or i1 %p_Result_1, %p_not" [CMFfixmult.cpp:13]   --->   Operation 39 'or' 'brmerge' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node overflow)   --->   "%tmp_4 = xor i1 %p_Result_s, true" [CMFfixmult.cpp:13]   --->   Operation 40 'xor' 'tmp_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.94ns) (out node of the LUT)   --->   "%overflow = and i1 %brmerge, %tmp_4" [CMFfixmult.cpp:13]   --->   Operation 41 'and' 'overflow' <Predicate = true> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%newsignbit_i_i_i_i = xor i1 %p_Result_1, true" [CMFfixmult.cpp:13]   --->   Operation 42 'xor' 'newsignbit_i_i_i_i' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 43 [1/1] (1.45ns)   --->   "%p_not1 = icmp ne i6 %p_Result_2, -1" [CMFfixmult.cpp:13]   --->   Operation 43 'icmp' 'p_not1' <Predicate = true> <Delay = 1.45> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%brmerge1 = or i1 %p_not1, %newsignbit_i_i_i_i" [CMFfixmult.cpp:13]   --->   Operation 44 'or' 'brmerge1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.94ns) (out node of the LUT)   --->   "%underflow = and i1 %brmerge1, %p_Result_s" [CMFfixmult.cpp:13]   --->   Operation 45 'and' 'underflow' <Predicate = true> <Delay = 0.94> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node p_mux)   --->   "%brmerge2 = or i1 %underflow, %overflow" [CMFfixmult.cpp:13]   --->   Operation 46 'or' 'brmerge2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node p_066_2)   --->   "%p_342_not = xor i1 %underflow, true" [CMFfixmult.cpp:13]   --->   Operation 47 'xor' 'p_342_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node p_066_2)   --->   "%brmerge3 = or i1 %overflow, %p_342_not" [CMFfixmult.cpp:13]   --->   Operation 48 'or' 'brmerge3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 49 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_mux = select i1 %brmerge2, i18 131071, i18 %p_Val2_1" [CMFfixmult.cpp:13]   --->   Operation 49 'select' 'p_mux' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node p_066_2)   --->   "%p_s = select i1 %underflow, i18 -131072, i18 %p_Val2_1" [CMFfixmult.cpp:13]   --->   Operation 50 'select' 'p_s' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_066_2 = select i1 %brmerge3, i18 %p_mux, i18 %p_s" [CMFfixmult.cpp:13]   --->   Operation 51 'select' 'p_066_2' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i18P(i18* %SaidaA1_V, i18 %p_066_2)" [CMFfixmult.cpp:13]   --->   Operation 52 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node p_mux1)   --->   "%brmerge6 = or i1 %underflow_1, %overflow_1" [CMFfixmult.cpp:15]   --->   Operation 53 'or' 'brmerge6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node p_0193_2)   --->   "%p_344_not = xor i1 %underflow_1, true" [CMFfixmult.cpp:15]   --->   Operation 54 'xor' 'p_344_not' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node p_0193_2)   --->   "%brmerge7 = or i1 %overflow_1, %p_344_not" [CMFfixmult.cpp:15]   --->   Operation 55 'or' 'brmerge7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_mux1 = select i1 %brmerge6, i9 255, i9 %p_Val2_3" [CMFfixmult.cpp:15]   --->   Operation 56 'select' 'p_mux1' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node p_0193_2)   --->   "%p_5 = select i1 %underflow_1, i9 -256, i9 %p_Val2_3" [CMFfixmult.cpp:15]   --->   Operation 57 'select' 'p_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (1.37ns) (out node of the LUT)   --->   "%p_0193_2 = select i1 %brmerge7, i9 %p_mux1, i9 %p_5" [CMFfixmult.cpp:15]   --->   Operation 58 'select' 'p_0193_2' <Predicate = true> <Delay = 1.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i9P(i9* %SaidaB1_V, i9 %p_0193_2)" [CMFfixmult.cpp:15]   --->   Operation 59 'write' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "ret void" [CMFfixmult.cpp:17]   --->   Operation 60 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.18ns
The critical path consists of the following:
	wire read on port 'EntradaA2_V' (CMFfixmult.cpp:9) [18]  (0 ns)
	'mul' operation of DSP[22] ('r.V', CMFfixmult.cpp:13) [22]  (7.18 ns)

 <State 2>: 5.14ns
The critical path consists of the following:
	'icmp' operation ('p_not', CMFfixmult.cpp:13) [27]  (1.46 ns)
	'or' operation ('brmerge', CMFfixmult.cpp:13) [28]  (0 ns)
	'and' operation ('overflow', CMFfixmult.cpp:13) [30]  (0.942 ns)
	'or' operation ('brmerge2', CMFfixmult.cpp:13) [35]  (0 ns)
	'select' operation ('p_mux', CMFfixmult.cpp:13) [38]  (1.37 ns)
	'select' operation ('p_066_2', CMFfixmult.cpp:13) [40]  (1.37 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
