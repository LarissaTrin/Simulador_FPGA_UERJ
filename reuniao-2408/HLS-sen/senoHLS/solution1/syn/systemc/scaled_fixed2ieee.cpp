// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "scaled_fixed2ieee.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic scaled_fixed2ieee::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic scaled_fixed2ieee::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state1 = "1";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state2 = "10";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state3 = "100";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state4 = "1000";
const sc_lv<5> scaled_fixed2ieee::ap_ST_fsm_state5 = "10000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1 = "1";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_0 = "0";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_2 = "10";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_3 = "11";
const sc_lv<1> scaled_fixed2ieee::ap_const_lv1_1 = "1";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_0 = "00";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_D = "1101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1C = "11100";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_F = "1111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1F = "11111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_12 = "10010";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_2 = "10";
const sc_lv<2> scaled_fixed2ieee::ap_const_lv2_1 = "1";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_10 = "10000";
const sc_lv<29> scaled_fixed2ieee::ap_const_lv29_0 = "00000000000000000000000000000";
const sc_lv<9> scaled_fixed2ieee::ap_const_lv9_7F = "1111111";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_4 = "100";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_5 = "101";
const sc_lv<32> scaled_fixed2ieee::ap_const_lv32_1B = "11011";
const sc_lv<23> scaled_fixed2ieee::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<8> scaled_fixed2ieee::ap_const_lv8_0 = "00000000";
const bool scaled_fixed2ieee::ap_const_boolean_1 = true;

scaled_fixed2ieee::scaled_fixed2ieee(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_return);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( result_write_assign_fu_455_p1 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_c_0_fu_272_p3);
    sensitive << ( p_Result_22_fu_264_p3 );

    SC_METHOD(thread_c_1_1_fu_280_p3);
    sensitive << ( c_0_s_reg_88 );
    sensitive << ( tmp_14_fu_242_p1 );
    sensitive << ( c_0_fu_272_p3 );

    SC_METHOD(thread_c_1_2_fu_288_p3);
    sensitive << ( c_1_s_reg_100 );
    sensitive << ( tmp_14_fu_242_p1 );
    sensitive << ( c_0_fu_272_p3 );

    SC_METHOD(thread_exitcond_fu_230_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i1_reg_112 );

    SC_METHOD(thread_i_1_fu_304_p2);
    sensitive << ( i2_reg_145 );

    SC_METHOD(thread_i_fu_236_p2);
    sensitive << ( i1_reg_112 );

    SC_METHOD(thread_newexp_fu_396_p2);
    sensitive << ( shift_1_reg_166 );
    sensitive << ( tmp_2_cast_fu_392_p1 );

    SC_METHOD(thread_or_cond_fu_410_p2);
    sensitive << ( tmp_3_reg_540 );
    sensitive << ( tmp_21_fu_402_p3 );

    SC_METHOD(thread_out_bits_0_V_fu_194_p5);
    sensitive << ( tmp_fu_186_p3 );

    SC_METHOD(thread_out_exp_V_fu_437_p3);
    sensitive << ( or_cond_fu_410_p2 );
    sensitive << ( tmp_22_fu_415_p1 );

    SC_METHOD(thread_p_Result_1_fu_176_p4);
    sensitive << ( in_V );

    SC_METHOD(thread_p_Result_22_fu_264_p3);
    sensitive << ( tmp_14_fu_242_p1 );
    sensitive << ( tmp_8_fu_246_p4 );
    sensitive << ( tmp_9_fu_255_p4 );

    SC_METHOD(thread_p_Result_23_fu_445_p4);
    sensitive << ( out_exp_V_fu_437_p3 );
    sensitive << ( significand_V_fu_429_p3 );

    SC_METHOD(thread_p_Result_s_fu_218_p5);
    sensitive << ( tmp_4_fu_210_p3 );

    SC_METHOD(thread_phitmp1_fu_419_p4);
    sensitive << ( p_Val2_s_reg_156 );

    SC_METHOD(thread_r_V_fu_370_p3);
    sensitive << ( isNeg_reg_514 );
    sensitive << ( tmp_18_fu_362_p1 );
    sensitive << ( tmp_19_fu_366_p1 );

    SC_METHOD(thread_result_write_assign_fu_455_p1);
    sensitive << ( p_Result_23_fu_445_p4 );

    SC_METHOD(thread_sh_assign_fu_314_p3);
    sensitive << ( c_0_s_reg_88 );
    sensitive << ( c_1_s_reg_100 );
    sensitive << ( tmp_16_fu_310_p1 );

    SC_METHOD(thread_shift_2_fu_336_p2);
    sensitive << ( sh_assign_reg_507 );
    sensitive << ( shift_reg_133 );

    SC_METHOD(thread_significand_V_fu_429_p3);
    sensitive << ( or_cond_fu_410_p2 );
    sensitive << ( phitmp1_fu_419_p4 );

    SC_METHOD(thread_tmp_13_fu_206_p1);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_14_fu_242_p1);
    sensitive << ( i1_reg_112 );

    SC_METHOD(thread_tmp_15_fu_296_p3);
    sensitive << ( i2_reg_145 );

    SC_METHOD(thread_tmp_16_fu_310_p1);
    sensitive << ( i2_reg_145 );

    SC_METHOD(thread_tmp_18_fu_362_p1);
    sensitive << ( tmp_7_fu_350_p2 );

    SC_METHOD(thread_tmp_19_fu_366_p1);
    sensitive << ( tmp_s_fu_356_p2 );

    SC_METHOD(thread_tmp_1_fu_377_p2);
    sensitive << ( tmp_15_reg_498 );
    sensitive << ( sh_assign_reg_507 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_21_fu_402_p3);
    sensitive << ( newexp_fu_396_p2 );

    SC_METHOD(thread_tmp_22_fu_415_p1);
    sensitive << ( newexp_fu_396_p2 );

    SC_METHOD(thread_tmp_2_cast_fu_392_p1);
    sensitive << ( tmp_2_fu_387_p2 );

    SC_METHOD(thread_tmp_2_fu_387_p2);
    sensitive << ( prescale );

    SC_METHOD(thread_tmp_3_fu_382_p2);
    sensitive << ( in_V );
    sensitive << ( tmp_15_reg_498 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_377_p2 );

    SC_METHOD(thread_tmp_4_fu_210_p3);
    sensitive << ( tmp_13_fu_206_p1 );

    SC_METHOD(thread_tmp_5_fu_330_p2);
    sensitive << ( sh_assign_fu_314_p3 );

    SC_METHOD(thread_tmp_6_fu_346_p1);
    sensitive << ( p_s_reg_123 );

    SC_METHOD(thread_tmp_7_fu_350_p2);
    sensitive << ( tmp_6_fu_346_p1 );
    sensitive << ( ush_fu_341_p3 );

    SC_METHOD(thread_tmp_8_fu_246_p4);
    sensitive << ( p_Result_s_reg_475 );

    SC_METHOD(thread_tmp_9_fu_255_p4);
    sensitive << ( out_bits_0_V_reg_470 );

    SC_METHOD(thread_tmp_fu_186_p3);
    sensitive << ( p_Result_1_fu_176_p4 );

    SC_METHOD(thread_tmp_s_fu_356_p2);
    sensitive << ( tmp_6_fu_346_p1 );
    sensitive << ( ush_fu_341_p3 );

    SC_METHOD(thread_ush_fu_341_p3);
    sensitive << ( sh_assign_reg_507 );
    sensitive << ( isNeg_reg_514 );
    sensitive << ( tmp_5_reg_520 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond_fu_230_p2 );
    sensitive << ( tmp_15_reg_498 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_1_fu_377_p2 );

    ap_CS_fsm = "00001";
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "scaled_fixed2ieee_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V, "(port)in_V");
    sc_trace(mVcdFile, prescale, "(port)prescale");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, out_bits_0_V_fu_194_p5, "out_bits_0_V_fu_194_p5");
    sc_trace(mVcdFile, out_bits_0_V_reg_470, "out_bits_0_V_reg_470");
    sc_trace(mVcdFile, p_Result_s_fu_218_p5, "p_Result_s_fu_218_p5");
    sc_trace(mVcdFile, p_Result_s_reg_475, "p_Result_s_reg_475");
    sc_trace(mVcdFile, i_fu_236_p2, "i_fu_236_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, c_1_1_fu_280_p3, "c_1_1_fu_280_p3");
    sc_trace(mVcdFile, exitcond_fu_230_p2, "exitcond_fu_230_p2");
    sc_trace(mVcdFile, c_1_2_fu_288_p3, "c_1_2_fu_288_p3");
    sc_trace(mVcdFile, tmp_15_fu_296_p3, "tmp_15_fu_296_p3");
    sc_trace(mVcdFile, tmp_15_reg_498, "tmp_15_reg_498");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_1_fu_304_p2, "i_1_fu_304_p2");
    sc_trace(mVcdFile, i_1_reg_502, "i_1_reg_502");
    sc_trace(mVcdFile, sh_assign_fu_314_p3, "sh_assign_fu_314_p3");
    sc_trace(mVcdFile, sh_assign_reg_507, "sh_assign_reg_507");
    sc_trace(mVcdFile, isNeg_reg_514, "isNeg_reg_514");
    sc_trace(mVcdFile, tmp_5_fu_330_p2, "tmp_5_fu_330_p2");
    sc_trace(mVcdFile, tmp_5_reg_520, "tmp_5_reg_520");
    sc_trace(mVcdFile, shift_2_fu_336_p2, "shift_2_fu_336_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, r_V_fu_370_p3, "r_V_fu_370_p3");
    sc_trace(mVcdFile, tmp_3_fu_382_p2, "tmp_3_fu_382_p2");
    sc_trace(mVcdFile, tmp_3_reg_540, "tmp_3_reg_540");
    sc_trace(mVcdFile, tmp_1_fu_377_p2, "tmp_1_fu_377_p2");
    sc_trace(mVcdFile, c_0_s_reg_88, "c_0_s_reg_88");
    sc_trace(mVcdFile, c_1_s_reg_100, "c_1_s_reg_100");
    sc_trace(mVcdFile, i1_reg_112, "i1_reg_112");
    sc_trace(mVcdFile, p_s_reg_123, "p_s_reg_123");
    sc_trace(mVcdFile, shift_reg_133, "shift_reg_133");
    sc_trace(mVcdFile, i2_reg_145, "i2_reg_145");
    sc_trace(mVcdFile, p_Val2_s_reg_156, "p_Val2_s_reg_156");
    sc_trace(mVcdFile, shift_1_reg_166, "shift_1_reg_166");
    sc_trace(mVcdFile, p_Result_1_fu_176_p4, "p_Result_1_fu_176_p4");
    sc_trace(mVcdFile, tmp_fu_186_p3, "tmp_fu_186_p3");
    sc_trace(mVcdFile, tmp_13_fu_206_p1, "tmp_13_fu_206_p1");
    sc_trace(mVcdFile, tmp_4_fu_210_p3, "tmp_4_fu_210_p3");
    sc_trace(mVcdFile, tmp_14_fu_242_p1, "tmp_14_fu_242_p1");
    sc_trace(mVcdFile, tmp_8_fu_246_p4, "tmp_8_fu_246_p4");
    sc_trace(mVcdFile, tmp_9_fu_255_p4, "tmp_9_fu_255_p4");
    sc_trace(mVcdFile, p_Result_22_fu_264_p3, "p_Result_22_fu_264_p3");
    sc_trace(mVcdFile, c_0_fu_272_p3, "c_0_fu_272_p3");
    sc_trace(mVcdFile, tmp_16_fu_310_p1, "tmp_16_fu_310_p1");
    sc_trace(mVcdFile, tmp_6_fu_346_p1, "tmp_6_fu_346_p1");
    sc_trace(mVcdFile, ush_fu_341_p3, "ush_fu_341_p3");
    sc_trace(mVcdFile, tmp_7_fu_350_p2, "tmp_7_fu_350_p2");
    sc_trace(mVcdFile, tmp_s_fu_356_p2, "tmp_s_fu_356_p2");
    sc_trace(mVcdFile, tmp_18_fu_362_p1, "tmp_18_fu_362_p1");
    sc_trace(mVcdFile, tmp_19_fu_366_p1, "tmp_19_fu_366_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_2_fu_387_p2, "tmp_2_fu_387_p2");
    sc_trace(mVcdFile, tmp_2_cast_fu_392_p1, "tmp_2_cast_fu_392_p1");
    sc_trace(mVcdFile, newexp_fu_396_p2, "newexp_fu_396_p2");
    sc_trace(mVcdFile, tmp_21_fu_402_p3, "tmp_21_fu_402_p3");
    sc_trace(mVcdFile, or_cond_fu_410_p2, "or_cond_fu_410_p2");
    sc_trace(mVcdFile, phitmp1_fu_419_p4, "phitmp1_fu_419_p4");
    sc_trace(mVcdFile, tmp_22_fu_415_p1, "tmp_22_fu_415_p1");
    sc_trace(mVcdFile, out_exp_V_fu_437_p3, "out_exp_V_fu_437_p3");
    sc_trace(mVcdFile, significand_V_fu_429_p3, "significand_V_fu_429_p3");
    sc_trace(mVcdFile, p_Result_23_fu_445_p4, "p_Result_23_fu_445_p4");
    sc_trace(mVcdFile, result_write_assign_fu_455_p1, "result_write_assign_fu_455_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

scaled_fixed2ieee::~scaled_fixed2ieee() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void scaled_fixed2ieee::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            ap_return_preg = result_write_assign_fu_455_p1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_0))) {
        i1_reg_112 = i_fu_236_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i1_reg_112 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_1))) {
        i2_reg_145 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_498.read()) && 
                esl_seteq<1,1,1>(tmp_1_fu_377_p2.read(), ap_const_lv1_1))) {
        i2_reg_145 = i_1_reg_502.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_498.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_377_p2.read()))) {
        p_Val2_s_reg_156 = r_V_fu_370_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_15_fu_296_p3.read(), ap_const_lv1_1))) {
        p_Val2_s_reg_156 = p_s_reg_123.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_1))) {
        p_s_reg_123 = in_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_498.read()) && 
                esl_seteq<1,1,1>(tmp_1_fu_377_p2.read(), ap_const_lv1_1))) {
        p_s_reg_123 = r_V_fu_370_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_498.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_377_p2.read()))) {
        shift_1_reg_166 = shift_2_fu_336_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(tmp_15_fu_296_p3.read(), ap_const_lv1_1))) {
        shift_1_reg_166 = shift_reg_133.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_1))) {
        shift_reg_133 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_reg_498.read()) && 
                esl_seteq<1,1,1>(tmp_1_fu_377_p2.read(), ap_const_lv1_1))) {
        shift_reg_133 = shift_2_fu_336_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_0))) {
        c_0_s_reg_88 = c_1_1_fu_280_p3.read();
        c_1_s_reg_100 = c_1_2_fu_288_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_1_reg_502 = i_1_fu_304_p2.read();
        tmp_15_reg_498 = i2_reg_145.read().range(1, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_15_fu_296_p3.read()))) {
        isNeg_reg_514 = sh_assign_fu_314_p3.read().range(31, 31);
        sh_assign_reg_507 = sh_assign_fu_314_p3.read();
        tmp_5_reg_520 = tmp_5_fu_330_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        out_bits_0_V_reg_470 = out_bits_0_V_fu_194_p5.read();
        p_Result_s_reg_475 = p_Result_s_fu_218_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_377_p2.read()) || 
  esl_seteq<1,1,1>(tmp_15_reg_498.read(), ap_const_lv1_1)))) {
        tmp_3_reg_540 = tmp_3_fu_382_p2.read();
    }
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void scaled_fixed2ieee::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void scaled_fixed2ieee::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void scaled_fixed2ieee::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        ap_return = result_write_assign_fu_455_p1.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void scaled_fixed2ieee::thread_c_0_fu_272_p3() {
    c_0_fu_272_p3 = esl_cttz<32,32>(p_Result_22_fu_264_p3.read());
}

void scaled_fixed2ieee::thread_c_1_1_fu_280_p3() {
    c_1_1_fu_280_p3 = (!tmp_14_fu_242_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_14_fu_242_p1.read()[0].to_bool())? c_0_s_reg_88.read(): c_0_fu_272_p3.read());
}

void scaled_fixed2ieee::thread_c_1_2_fu_288_p3() {
    c_1_2_fu_288_p3 = (!tmp_14_fu_242_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_14_fu_242_p1.read()[0].to_bool())? c_0_fu_272_p3.read(): c_1_s_reg_100.read());
}

void scaled_fixed2ieee::thread_exitcond_fu_230_p2() {
    exitcond_fu_230_p2 = (!i1_reg_112.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_112.read() == ap_const_lv2_2);
}

void scaled_fixed2ieee::thread_i_1_fu_304_p2() {
    i_1_fu_304_p2 = (!i2_reg_145.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i2_reg_145.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void scaled_fixed2ieee::thread_i_fu_236_p2() {
    i_fu_236_p2 = (!i1_reg_112.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_112.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void scaled_fixed2ieee::thread_newexp_fu_396_p2() {
    newexp_fu_396_p2 = (!tmp_2_cast_fu_392_p1.read().is_01() || !shift_1_reg_166.read().is_01())? sc_lv<32>(): (sc_bigint<32>(tmp_2_cast_fu_392_p1.read()) - sc_biguint<32>(shift_1_reg_166.read()));
}

void scaled_fixed2ieee::thread_or_cond_fu_410_p2() {
    or_cond_fu_410_p2 = (tmp_21_fu_402_p3.read() | tmp_3_reg_540.read());
}

void scaled_fixed2ieee::thread_out_bits_0_V_fu_194_p5() {
    out_bits_0_V_fu_194_p5 = esl_partset<32,32,17,32,32>(ap_const_lv32_0, tmp_fu_186_p3.read(), ap_const_lv32_F, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_out_exp_V_fu_437_p3() {
    out_exp_V_fu_437_p3 = (!or_cond_fu_410_p2.read()[0].is_01())? sc_lv<8>(): ((or_cond_fu_410_p2.read()[0].to_bool())? ap_const_lv8_0: tmp_22_fu_415_p1.read());
}

void scaled_fixed2ieee::thread_p_Result_1_fu_176_p4() {
    p_Result_1_fu_176_p4 = in_V.read().range(28, 13);
}

void scaled_fixed2ieee::thread_p_Result_22_fu_264_p3() {
    p_Result_22_fu_264_p3 = (!tmp_14_fu_242_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_14_fu_242_p1.read()[0].to_bool())? tmp_8_fu_246_p4.read(): tmp_9_fu_255_p4.read());
}

void scaled_fixed2ieee::thread_p_Result_23_fu_445_p4() {
    p_Result_23_fu_445_p4 = esl_concat<9,23>(esl_concat<1,8>(ap_const_lv1_0, out_exp_V_fu_437_p3.read()), significand_V_fu_429_p3.read());
}

void scaled_fixed2ieee::thread_p_Result_s_fu_218_p5() {
    p_Result_s_fu_218_p5 = esl_partset<32,32,14,32,32>(ap_const_lv32_0, tmp_4_fu_210_p3.read(), ap_const_lv32_12, ap_const_lv32_1F);
}

void scaled_fixed2ieee::thread_phitmp1_fu_419_p4() {
    phitmp1_fu_419_p4 = p_Val2_s_reg_156.read().range(27, 5);
}

void scaled_fixed2ieee::thread_r_V_fu_370_p3() {
    r_V_fu_370_p3 = (!isNeg_reg_514.read()[0].is_01())? sc_lv<29>(): ((isNeg_reg_514.read()[0].to_bool())? tmp_18_fu_362_p1.read(): tmp_19_fu_366_p1.read());
}

void scaled_fixed2ieee::thread_result_write_assign_fu_455_p1() {
    result_write_assign_fu_455_p1 = p_Result_23_fu_445_p4.read();
}

void scaled_fixed2ieee::thread_sh_assign_fu_314_p3() {
    sh_assign_fu_314_p3 = (!tmp_16_fu_310_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_16_fu_310_p1.read()[0].to_bool())? c_1_s_reg_100.read(): c_0_s_reg_88.read());
}

void scaled_fixed2ieee::thread_shift_2_fu_336_p2() {
    shift_2_fu_336_p2 = (!sh_assign_reg_507.read().is_01() || !shift_reg_133.read().is_01())? sc_lv<32>(): (sc_biguint<32>(sh_assign_reg_507.read()) + sc_biguint<32>(shift_reg_133.read()));
}

void scaled_fixed2ieee::thread_significand_V_fu_429_p3() {
    significand_V_fu_429_p3 = (!or_cond_fu_410_p2.read()[0].is_01())? sc_lv<23>(): ((or_cond_fu_410_p2.read()[0].to_bool())? ap_const_lv23_0: phitmp1_fu_419_p4.read());
}

void scaled_fixed2ieee::thread_tmp_13_fu_206_p1() {
    tmp_13_fu_206_p1 = in_V.read().range(13-1, 0);
}

void scaled_fixed2ieee::thread_tmp_14_fu_242_p1() {
    tmp_14_fu_242_p1 = i1_reg_112.read().range(1-1, 0);
}

void scaled_fixed2ieee::thread_tmp_15_fu_296_p3() {
    tmp_15_fu_296_p3 = i2_reg_145.read().range(1, 1);
}

void scaled_fixed2ieee::thread_tmp_16_fu_310_p1() {
    tmp_16_fu_310_p1 = i2_reg_145.read().range(1-1, 0);
}

void scaled_fixed2ieee::thread_tmp_18_fu_362_p1() {
    tmp_18_fu_362_p1 = tmp_7_fu_350_p2.read().range(29-1, 0);
}

void scaled_fixed2ieee::thread_tmp_19_fu_366_p1() {
    tmp_19_fu_366_p1 = tmp_s_fu_356_p2.read().range(29-1, 0);
}

void scaled_fixed2ieee::thread_tmp_1_fu_377_p2() {
    tmp_1_fu_377_p2 = (!sh_assign_reg_507.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(sh_assign_reg_507.read() == ap_const_lv32_10);
}

void scaled_fixed2ieee::thread_tmp_21_fu_402_p3() {
    tmp_21_fu_402_p3 = newexp_fu_396_p2.read().range(31, 31);
}

void scaled_fixed2ieee::thread_tmp_22_fu_415_p1() {
    tmp_22_fu_415_p1 = newexp_fu_396_p2.read().range(8-1, 0);
}

void scaled_fixed2ieee::thread_tmp_2_cast_fu_392_p1() {
    tmp_2_cast_fu_392_p1 = esl_sext<32,9>(tmp_2_fu_387_p2.read());
}

void scaled_fixed2ieee::thread_tmp_2_fu_387_p2() {
    tmp_2_fu_387_p2 = (!ap_const_lv9_7F.is_01() || !prescale.read().is_01())? sc_lv<9>(): (sc_biguint<9>(ap_const_lv9_7F) - sc_biguint<9>(prescale.read()));
}

void scaled_fixed2ieee::thread_tmp_3_fu_382_p2() {
    tmp_3_fu_382_p2 = (!in_V.read().is_01() || !ap_const_lv29_0.is_01())? sc_lv<1>(): sc_lv<1>(in_V.read() == ap_const_lv29_0);
}

void scaled_fixed2ieee::thread_tmp_4_fu_210_p3() {
    tmp_4_fu_210_p3 = esl_concat<13,1>(tmp_13_fu_206_p1.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_5_fu_330_p2() {
    tmp_5_fu_330_p2 = (!ap_const_lv32_0.is_01() || !sh_assign_fu_314_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sh_assign_fu_314_p3.read()));
}

void scaled_fixed2ieee::thread_tmp_6_fu_346_p1() {
    tmp_6_fu_346_p1 = esl_zext<32,29>(p_s_reg_123.read());
}

void scaled_fixed2ieee::thread_tmp_7_fu_350_p2() {
    tmp_7_fu_350_p2 = (!ush_fu_341_p3.read().is_01())? sc_lv<32>(): tmp_6_fu_346_p1.read() >> (unsigned short)ush_fu_341_p3.read().to_uint();
}

void scaled_fixed2ieee::thread_tmp_8_fu_246_p4() {
    tmp_8_fu_246_p4 = p_Result_s_reg_475.read().range(0, 31);
}

void scaled_fixed2ieee::thread_tmp_9_fu_255_p4() {
    tmp_9_fu_255_p4 = out_bits_0_V_reg_470.read().range(0, 31);
}

void scaled_fixed2ieee::thread_tmp_fu_186_p3() {
    tmp_fu_186_p3 = esl_concat<16,1>(p_Result_1_fu_176_p4.read(), ap_const_lv1_1);
}

void scaled_fixed2ieee::thread_tmp_s_fu_356_p2() {
    tmp_s_fu_356_p2 = (!ush_fu_341_p3.read().is_01())? sc_lv<32>(): tmp_6_fu_346_p1.read() << (unsigned short)ush_fu_341_p3.read().to_uint();
}

void scaled_fixed2ieee::thread_ush_fu_341_p3() {
    ush_fu_341_p3 = (!isNeg_reg_514.read()[0].is_01())? sc_lv<32>(): ((isNeg_reg_514.read()[0].to_bool())? tmp_5_reg_520.read(): sh_assign_reg_507.read());
}

void scaled_fixed2ieee::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond_fu_230_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_1_fu_377_p2.read()) || 
  esl_seteq<1,1,1>(tmp_15_reg_498.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXX";
            break;
    }
}

}

