// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sen,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xa7a12tcsg325-1q,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.026143,HLS_SYN_LAT=24,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=13,HLS_SYN_FF=1644,HLS_SYN_LUT=2881,HLS_VERSION=2018_3}" *)

module sen (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Entrada,
        ap_return
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] Entrada;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] ref_4oPi_table_100_V_address0;
reg    ref_4oPi_table_100_V_ce0;
wire   [99:0] ref_4oPi_table_100_V_q0;
wire   [7:0] second_order_float_2_address0;
reg    second_order_float_2_ce0;
wire   [29:0] second_order_float_2_q0;
wire   [7:0] second_order_float_3_address0;
reg    second_order_float_3_ce0;
wire   [22:0] second_order_float_3_q0;
wire   [7:0] second_order_float_s_address0;
reg    second_order_float_s_ce0;
wire   [14:0] second_order_float_s_q0;
reg   [0:0] results_sign_V_1_reg_935;
wire   [7:0] tmp_V_fu_232_p4;
reg   [7:0] tmp_V_reg_941;
wire   [22:0] tmp_V_1_fu_242_p1;
reg   [22:0] tmp_V_1_reg_948;
wire   [0:0] closepath_fu_246_p2;
reg   [0:0] closepath_reg_954;
wire   [3:0] tmp_6_fu_281_p1;
reg   [3:0] tmp_6_reg_965;
reg   [79:0] Med_V_reg_970;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire   [0:0] tmp_28_i_fu_324_p2;
reg   [0:0] tmp_28_i_reg_985;
reg   [57:0] p_Val2_24_reg_991;
wire    ap_CS_fsm_state7;
reg   [2:0] tmp_12_i_i_reg_997;
wire   [2:0] p_Val2_25_fu_349_p3;
reg   [2:0] p_Val2_25_reg_1002;
wire    ap_CS_fsm_state8;
wire   [57:0] p_Val2_7_fu_364_p3;
reg   [57:0] p_Val2_7_reg_1008;
wire   [4:0] Mx_zeros_V_fu_415_p1;
reg   [4:0] Mx_zeros_V_reg_1013;
reg   [28:0] Mx_V_reg_1019;
wire    ap_CS_fsm_state9;
wire  signed [7:0] Ex_V_fu_452_p2;
reg  signed [7:0] Ex_V_reg_1026;
wire   [0:0] isNeg_fu_462_p3;
reg   [0:0] isNeg_reg_1031;
wire  signed [8:0] ush_fu_476_p3;
reg  signed [8:0] ush_reg_1036;
wire   [0:0] tmp_27_i_fu_484_p2;
reg   [0:0] tmp_27_i_reg_1042;
wire   [0:0] tmp_29_i_fu_489_p2;
reg   [0:0] tmp_29_i_reg_1048;
wire   [0:0] cos_basis_fu_525_p10;
reg   [0:0] cos_basis_reg_1055;
wire    ap_CS_fsm_state10;
wire   [21:0] B_V_fu_556_p1;
reg   [21:0] B_V_reg_1062;
reg   [14:0] B_trunc_V_reg_1067;
reg   [14:0] B_squared_V_reg_1087;
wire    ap_CS_fsm_state11;
reg   [28:0] t1_V_reg_1092;
reg   [22:0] second_order_float_6_reg_1097;
reg  signed [14:0] second_order_float_8_reg_1102;
reg   [21:0] tmp_7_i_i_reg_1107;
wire    ap_CS_fsm_state12;
reg   [13:0] tmp_9_i_i_reg_1112;
wire   [28:0] Mx_V_read_assign_fu_650_p3;
reg   [28:0] Mx_V_read_assign_reg_1117;
wire    ap_CS_fsm_state13;
wire   [29:0] ret_V_fu_671_p2;
reg   [29:0] ret_V_reg_1122;
reg   [28:0] result_V_reg_1127;
wire    ap_CS_fsm_state14;
wire   [8:0] ret_V_2_fu_710_p2;
reg   [8:0] ret_V_2_reg_1132;
wire   [31:0] grp_scaled_fixed2ieee_fu_214_ap_return;
reg   [31:0] resultf_reg_1137;
wire    ap_CS_fsm_state15;
wire    grp_scaled_fixed2ieee_fu_214_ap_ready;
wire    grp_scaled_fixed2ieee_fu_214_ap_done;
wire    grp_scaled_fixed2ieee_fu_214_ap_start;
wire    grp_scaled_fixed2ieee_fu_214_ap_idle;
reg    grp_scaled_fixed2ieee_fu_214_ap_start_reg;
wire   [63:0] tmp_5_i_i_i_fu_276_p1;
wire   [63:0] tmp_26_i_i_fu_584_p1;
wire   [31:0] p_Val2_s_fu_220_p1;
wire   [7:0] expv_op_i_i_fu_252_p2;
wire   [7:0] addr_V_fu_258_p3;
wire   [3:0] tmp_3_fu_266_p4;
wire   [99:0] tmp_7_i_i_i_fu_285_p1;
wire   [99:0] r_V_9_fu_288_p2;
wire   [23:0] p_Result_15_fu_304_p3;
wire   [79:0] grp_fu_318_p0;
wire   [23:0] grp_fu_318_p1;
wire   [103:0] grp_fu_318_p2;
wire   [0:0] tmp_7_fu_355_p1;
wire   [57:0] Mx_bits_V_1_fu_359_p2;
wire   [28:0] p_Result_i_i_i_fu_371_p4;
wire   [29:0] p_Result_16_fu_381_p3;
reg   [29:0] p_Result_s_fu_389_p4;
wire   [31:0] p_Result_17_fu_399_p3;
reg   [31:0] val_assign_fu_407_p3;
wire   [7:0] p_1_i_i_fu_419_p2;
wire   [57:0] tmp_15_i_i_fu_431_p1;
wire   [57:0] r_V_10_fu_434_p2;
wire   [7:0] storemerge_i_i_fu_424_p3;
wire   [7:0] tmp_18_i_i_fu_449_p1;
wire  signed [8:0] sh_i_i_cast_fu_458_p1;
wire   [8:0] tmp_20_i_i_fu_470_p2;
wire  signed [28:0] sh_assign_4_i_i_cast_fu_497_p1;
wire   [28:0] tmp_22_i_i_fu_503_p2;
wire   [31:0] tmp_21_i_i_fu_500_p1;
wire  signed [31:0] sh_assign_4_i_i_cast_1_fu_494_p1;
wire   [31:0] tmp_24_i_i_fu_508_p1;
wire   [31:0] tmp_25_i_i_fu_512_p2;
wire   [31:0] p_0237_0_in_i_i_fu_518_p3;
wire   [0:0] sin_basis_fu_570_p2;
wire   [6:0] p_Result_i_i_fu_546_p4;
wire   [7:0] p_Result_18_fu_576_p3;
wire   [29:0] r_V_11_fu_921_p2;
wire  signed [22:0] r_V_12_fu_619_p0;
wire   [21:0] r_V_12_fu_619_p1;
wire   [44:0] r_V_12_fu_619_p2;
wire  signed [29:0] r_V_13_fu_928_p2;
wire  signed [29:0] lhs_V_1_fu_656_p1;
wire  signed [29:0] rhs_V_1_fu_659_p1;
wire   [29:0] ret_V_11_fu_662_p2;
wire  signed [29:0] rhs_V_2_i_cast_fu_668_p1;
wire  signed [29:0] r_V_14_fu_689_p0;
wire   [28:0] r_V_14_fu_689_p1;
wire   [57:0] r_V_14_fu_689_p2;
wire   [7:0] p_Ex_V_ret_i_fu_677_p3;
wire  signed [8:0] rhs_V_2_fu_706_p1;
wire    ap_CS_fsm_state16;
wire   [31:0] p_Val2_20_fu_717_p1;
wire   [3:0] p_Result_20_fu_742_p3;
wire   [0:0] tmp_fu_748_p18;
wire   [0:0] tmp_1_fu_786_p18;
wire   [0:0] tmp_26_i_fu_824_p3;
wire   [0:0] tmp_11_i_fu_840_p2;
wire   [0:0] not_tmp_i_fu_835_p2;
wire   [0:0] p_Result_19_fu_720_p3;
wire   [0:0] or_cond_i_fu_831_p2;
wire   [0:0] p_Repl2_9_trunc_s_fu_845_p3;
wire   [0:0] not_or_cond_i_demorg_fu_860_p2;
wire   [0:0] not_or_cond_i_fu_864_p2;
wire   [0:0] tmp_2_fu_878_p2;
wire   [7:0] p_Result_i_cast_fu_870_p3;
wire   [7:0] tmp_V_2_fu_728_p4;
wire   [22:0] p_Result_1_i_cast_fu_891_p3;
wire   [22:0] tmp_V_3_fu_738_p1;
wire   [0:0] p_Repl2_3_fu_853_p3;
wire   [7:0] ret_V_8_fu_883_p3;
wire   [22:0] ret_V_9_fu_899_p3;
wire   [31:0] p_Result_21_fu_907_p4;
wire   [14:0] r_V_11_fu_921_p0;
wire   [29:0] r_V_fu_591_p1;
wire   [14:0] r_V_11_fu_921_p1;
wire   [14:0] r_V_13_fu_928_p0;
reg   [15:0] ap_NS_fsm;
wire   [103:0] grp_fu_318_p00;
wire   [103:0] grp_fu_318_p10;
wire   [44:0] r_V_12_fu_619_p10;
wire   [29:0] r_V_13_fu_928_p00;
wire   [57:0] r_V_14_fu_689_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 grp_scaled_fixed2ieee_fu_214_ap_start_reg = 1'b0;
end

sen_ref_4oPi_tablbkb #(
    .DataWidth( 100 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
ref_4oPi_table_100_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ref_4oPi_table_100_V_address0),
    .ce0(ref_4oPi_table_100_V_ce0),
    .q0(ref_4oPi_table_100_V_q0)
);

sen_second_order_cud #(
    .DataWidth( 30 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_2_address0),
    .ce0(second_order_float_2_ce0),
    .q0(second_order_float_2_q0)
);

sen_second_order_dEe #(
    .DataWidth( 23 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_3_address0),
    .ce0(second_order_float_3_ce0),
    .q0(second_order_float_3_q0)
);

sen_second_order_eOg #(
    .DataWidth( 15 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
second_order_float_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(second_order_float_s_address0),
    .ce0(second_order_float_s_ce0),
    .q0(second_order_float_s_q0)
);

scaled_fixed2ieee grp_scaled_fixed2ieee_fu_214(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_scaled_fixed2ieee_fu_214_ap_start),
    .ap_done(grp_scaled_fixed2ieee_fu_214_ap_done),
    .ap_idle(grp_scaled_fixed2ieee_fu_214_ap_idle),
    .ap_ready(grp_scaled_fixed2ieee_fu_214_ap_ready),
    .in_V(result_V_reg_1127),
    .prescale(ret_V_2_reg_1132),
    .ap_return(grp_scaled_fixed2ieee_fu_214_ap_return)
);

sen_mul_80ns_24nsfYi #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 80 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 104 ))
sen_mul_80ns_24nsfYi_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_318_p0),
    .din1(grp_fu_318_p1),
    .ce(1'b1),
    .dout(grp_fu_318_p2)
);

sen_mux_83_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 1 ))
sen_mux_83_1_1_1_U4(
    .din0(1'd0),
    .din1(1'd1),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd0),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(p_Val2_25_reg_1002),
    .dout(cos_basis_fu_525_p10)
);

sen_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sen_mux_164_1_1_1_U5(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd0),
    .din3(1'd1),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd1),
    .din7(1'd0),
    .din8(1'd0),
    .din9(1'd1),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd1),
    .din13(1'd0),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_20_fu_742_p3),
    .dout(tmp_fu_748_p18)
);

sen_mux_164_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 1 ))
sen_mux_164_1_1_1_U6(
    .din0(1'd0),
    .din1(1'd0),
    .din2(1'd1),
    .din3(1'd0),
    .din4(1'd1),
    .din5(1'd1),
    .din6(1'd0),
    .din7(1'd1),
    .din8(1'd1),
    .din9(1'd0),
    .din10(1'd1),
    .din11(1'd1),
    .din12(1'd0),
    .din13(1'd1),
    .din14(1'd0),
    .din15(1'd0),
    .din16(p_Result_20_fu_742_p3),
    .dout(tmp_1_fu_786_p18)
);

sen_mul_mul_15ns_g8j #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
sen_mul_mul_15ns_g8j_U7(
    .din0(r_V_11_fu_921_p0),
    .din1(r_V_11_fu_921_p1),
    .dout(r_V_11_fu_921_p2)
);

sen_mul_mul_15ns_hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 30 ))
sen_mul_mul_15ns_hbi_U8(
    .din0(r_V_13_fu_928_p0),
    .din1(second_order_float_8_reg_1102),
    .dout(r_V_13_fu_928_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_scaled_fixed2ieee_fu_214_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_scaled_fixed2ieee_fu_214_ap_start_reg <= 1'b1;
        end else if ((grp_scaled_fixed2ieee_fu_214_ap_ready == 1'b1)) begin
            grp_scaled_fixed2ieee_fu_214_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        B_V_reg_1062 <= B_V_fu_556_p1;
        B_trunc_V_reg_1067 <= {{p_0237_0_in_i_i_fu_518_p3[21:7]}};
        cos_basis_reg_1055 <= cos_basis_fu_525_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        B_squared_V_reg_1087 <= {{r_V_11_fu_921_p2[29:15]}};
        second_order_float_6_reg_1097 <= second_order_float_3_q0;
        second_order_float_8_reg_1102 <= second_order_float_s_q0;
        t1_V_reg_1092 <= {{second_order_float_2_q0[29:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Ex_V_reg_1026 <= Ex_V_fu_452_p2;
        Mx_V_reg_1019 <= {{r_V_10_fu_434_p2[57:29]}};
        isNeg_reg_1031 <= Ex_V_fu_452_p2[32'd7];
        tmp_27_i_reg_1042 <= tmp_27_i_fu_484_p2;
        tmp_29_i_reg_1048 <= tmp_29_i_fu_489_p2;
        ush_reg_1036 <= ush_fu_476_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Med_V_reg_970 <= {{r_V_9_fu_288_p2[99:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        Mx_V_read_assign_reg_1117 <= Mx_V_read_assign_fu_650_p3;
        ret_V_reg_1122 <= ret_V_fu_671_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Mx_zeros_V_reg_1013 <= Mx_zeros_V_fu_415_p1;
        p_Val2_25_reg_1002 <= p_Val2_25_fu_349_p3;
        p_Val2_7_reg_1008 <= p_Val2_7_fu_364_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        closepath_reg_954 <= closepath_fu_246_p2;
        results_sign_V_1_reg_935 <= p_Val2_s_fu_220_p1[32'd31];
        tmp_6_reg_965 <= tmp_6_fu_281_p1;
        tmp_V_1_reg_948 <= tmp_V_1_fu_242_p1;
        tmp_V_reg_941 <= {{p_Val2_s_fu_220_p1[30:23]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_Val2_24_reg_991 <= {{grp_fu_318_p2[76:19]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        result_V_reg_1127 <= {{r_V_14_fu_689_p2[57:29]}};
        ret_V_2_reg_1132 <= ret_V_2_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_scaled_fixed2ieee_fu_214_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        resultf_reg_1137 <= grp_scaled_fixed2ieee_fu_214_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((closepath_reg_954 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        tmp_12_i_i_reg_997 <= {{grp_fu_318_p2[79:77]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_28_i_reg_985 <= tmp_28_i_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        tmp_7_i_i_reg_1107 <= {{r_V_12_fu_619_p2[44:23]}};
        tmp_9_i_i_reg_1112 <= {{r_V_13_fu_928_p2[29:16]}};
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ref_4oPi_table_100_V_ce0 = 1'b1;
    end else begin
        ref_4oPi_table_100_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        second_order_float_2_ce0 = 1'b1;
    end else begin
        second_order_float_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        second_order_float_3_ce0 = 1'b1;
    end else begin
        second_order_float_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        second_order_float_s_ce0 = 1'b1;
    end else begin
        second_order_float_s_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_scaled_fixed2ieee_fu_214_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign B_V_fu_556_p1 = p_0237_0_in_i_i_fu_518_p3[21:0];

assign Ex_V_fu_452_p2 = (storemerge_i_i_fu_424_p3 - tmp_18_i_i_fu_449_p1);

assign Mx_V_read_assign_fu_650_p3 = ((cos_basis_reg_1055[0:0] === 1'b1) ? 29'd536870911 : Mx_V_reg_1019);

assign Mx_bits_V_1_fu_359_p2 = (58'd0 - p_Val2_24_reg_991);

assign Mx_zeros_V_fu_415_p1 = val_assign_fu_407_p3[4:0];

assign addr_V_fu_258_p3 = ((closepath_fu_246_p2[0:0] === 1'b1) ? 8'd63 : expv_op_i_i_fu_252_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = p_Result_21_fu_907_p4;

assign closepath_fu_246_p2 = ((tmp_V_fu_232_p4 < 8'd126) ? 1'b1 : 1'b0);

assign expv_op_i_i_fu_252_p2 = ($signed(8'd194) + $signed(tmp_V_fu_232_p4));

assign grp_fu_318_p0 = grp_fu_318_p00;

assign grp_fu_318_p00 = Med_V_reg_970;

assign grp_fu_318_p1 = grp_fu_318_p10;

assign grp_fu_318_p10 = p_Result_15_fu_304_p3;

assign grp_scaled_fixed2ieee_fu_214_ap_start = grp_scaled_fixed2ieee_fu_214_ap_start_reg;

assign isNeg_fu_462_p3 = Ex_V_fu_452_p2[32'd7];

assign lhs_V_1_fu_656_p1 = $signed(t1_V_reg_1092);

assign not_or_cond_i_demorg_fu_860_p2 = (tmp_28_i_reg_985 & tmp_27_i_reg_1042);

assign not_or_cond_i_fu_864_p2 = (not_or_cond_i_demorg_fu_860_p2 ^ 1'd1);

assign not_tmp_i_fu_835_p2 = (tmp_29_i_reg_1048 ^ 1'd1);

assign or_cond_i_fu_831_p2 = (tmp_28_i_reg_985 & tmp_27_i_reg_1042);

assign p_0237_0_in_i_i_fu_518_p3 = ((isNeg_reg_1031[0:0] === 1'b1) ? tmp_24_i_i_fu_508_p1 : tmp_25_i_i_fu_512_p2);

assign p_1_i_i_fu_419_p2 = ($signed(8'd131) + $signed(tmp_V_reg_941));

assign p_Ex_V_ret_i_fu_677_p3 = ((cos_basis_reg_1055[0:0] === 1'b1) ? 8'd0 : Ex_V_reg_1026);

assign p_Repl2_3_fu_853_p3 = ((or_cond_i_fu_831_p2[0:0] === 1'b1) ? results_sign_V_1_reg_935 : p_Repl2_9_trunc_s_fu_845_p3);

assign p_Repl2_9_trunc_s_fu_845_p3 = ((tmp_11_i_fu_840_p2[0:0] === 1'b1) ? not_tmp_i_fu_835_p2 : p_Result_19_fu_720_p3);

assign p_Result_15_fu_304_p3 = {{1'd1}, {tmp_V_1_reg_948}};

assign p_Result_16_fu_381_p3 = {{p_Result_i_i_i_fu_371_p4}, {1'd1}};

assign p_Result_17_fu_399_p3 = {{2'd3}, {p_Result_s_fu_389_p4}};

assign p_Result_18_fu_576_p3 = {{sin_basis_fu_570_p2}, {p_Result_i_i_fu_546_p4}};

assign p_Result_19_fu_720_p3 = p_Val2_20_fu_717_p1[32'd31];

assign p_Result_1_i_cast_fu_891_p3 = ((not_or_cond_i_fu_864_p2[0:0] === 1'b1) ? 23'd8388607 : 23'd0);

assign p_Result_20_fu_742_p3 = {{results_sign_V_1_reg_935}, {p_Val2_25_reg_1002}};

assign p_Result_21_fu_907_p4 = {{{p_Repl2_3_fu_853_p3}, {ret_V_8_fu_883_p3}}, {ret_V_9_fu_899_p3}};

assign p_Result_i_cast_fu_870_p3 = ((not_or_cond_i_fu_864_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign p_Result_i_i_fu_546_p4 = {{p_0237_0_in_i_i_fu_518_p3[28:22]}};

assign p_Result_i_i_i_fu_371_p4 = {{p_Val2_7_fu_364_p3[57:29]}};

integer ap_tvar_int_0;

always @ (p_Result_16_fu_381_p3) begin
    for (ap_tvar_int_0 = 30 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 29 - 0) begin
            p_Result_s_fu_389_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_s_fu_389_p4[ap_tvar_int_0] = p_Result_16_fu_381_p3[29 - ap_tvar_int_0];
        end
    end
end

assign p_Val2_20_fu_717_p1 = resultf_reg_1137;

assign p_Val2_25_fu_349_p3 = ((closepath_reg_954[0:0] === 1'b1) ? 3'd0 : tmp_12_i_i_reg_997);

assign p_Val2_7_fu_364_p3 = ((tmp_7_fu_355_p1[0:0] === 1'b1) ? Mx_bits_V_1_fu_359_p2 : p_Val2_24_reg_991);

assign p_Val2_s_fu_220_p1 = Entrada;

assign r_V_10_fu_434_p2 = p_Val2_7_reg_1008 << tmp_15_i_i_fu_431_p1;

assign r_V_11_fu_921_p0 = r_V_fu_591_p1;

assign r_V_11_fu_921_p1 = r_V_fu_591_p1;

assign r_V_12_fu_619_p0 = second_order_float_6_reg_1097;

assign r_V_12_fu_619_p1 = r_V_12_fu_619_p10;

assign r_V_12_fu_619_p10 = B_V_reg_1062;

assign r_V_12_fu_619_p2 = ($signed(r_V_12_fu_619_p0) * $signed({{1'b0}, {r_V_12_fu_619_p1}}));

assign r_V_13_fu_928_p0 = r_V_13_fu_928_p00;

assign r_V_13_fu_928_p00 = B_squared_V_reg_1087;

assign r_V_14_fu_689_p0 = ret_V_reg_1122;

assign r_V_14_fu_689_p1 = r_V_14_fu_689_p10;

assign r_V_14_fu_689_p10 = Mx_V_read_assign_reg_1117;

assign r_V_14_fu_689_p2 = ($signed(r_V_14_fu_689_p0) * $signed({{1'b0}, {r_V_14_fu_689_p1}}));

assign r_V_9_fu_288_p2 = ref_4oPi_table_100_V_q0 << tmp_7_i_i_i_fu_285_p1;

assign r_V_fu_591_p1 = B_trunc_V_reg_1067;

assign ref_4oPi_table_100_V_address0 = tmp_5_i_i_i_fu_276_p1;

assign ret_V_11_fu_662_p2 = ($signed(lhs_V_1_fu_656_p1) + $signed(rhs_V_1_fu_659_p1));

assign ret_V_2_fu_710_p2 = ($signed(9'd0) - $signed(rhs_V_2_fu_706_p1));

assign ret_V_8_fu_883_p3 = ((tmp_2_fu_878_p2[0:0] === 1'b1) ? p_Result_i_cast_fu_870_p3 : tmp_V_2_fu_728_p4);

assign ret_V_9_fu_899_p3 = ((tmp_2_fu_878_p2[0:0] === 1'b1) ? p_Result_1_i_cast_fu_891_p3 : tmp_V_3_fu_738_p1);

assign ret_V_fu_671_p2 = ($signed(ret_V_11_fu_662_p2) + $signed(rhs_V_2_i_cast_fu_668_p1));

assign rhs_V_1_fu_659_p1 = $signed(tmp_7_i_i_reg_1107);

assign rhs_V_2_fu_706_p1 = $signed(p_Ex_V_ret_i_fu_677_p3);

assign rhs_V_2_i_cast_fu_668_p1 = $signed(tmp_9_i_i_reg_1112);

assign second_order_float_2_address0 = tmp_26_i_i_fu_584_p1;

assign second_order_float_3_address0 = tmp_26_i_i_fu_584_p1;

assign second_order_float_s_address0 = tmp_26_i_i_fu_584_p1;

assign sh_assign_4_i_i_cast_1_fu_494_p1 = ush_reg_1036;

assign sh_assign_4_i_i_cast_fu_497_p1 = ush_reg_1036;

assign sh_i_i_cast_fu_458_p1 = Ex_V_fu_452_p2;

assign sin_basis_fu_570_p2 = (cos_basis_fu_525_p10 ^ 1'd1);

assign storemerge_i_i_fu_424_p3 = ((closepath_reg_954[0:0] === 1'b1) ? p_1_i_i_fu_419_p2 : 8'd0);

assign tmp_11_i_fu_840_p2 = (tmp_29_i_reg_1048 | tmp_26_i_fu_824_p3);

assign tmp_15_i_i_fu_431_p1 = Mx_zeros_V_reg_1013;

assign tmp_18_i_i_fu_449_p1 = Mx_zeros_V_reg_1013;

assign tmp_20_i_i_fu_470_p2 = ($signed(9'd0) - $signed(sh_i_i_cast_fu_458_p1));

assign tmp_21_i_i_fu_500_p1 = Mx_V_reg_1019;

assign tmp_22_i_i_fu_503_p2 = Mx_V_reg_1019 >> sh_assign_4_i_i_cast_fu_497_p1;

assign tmp_24_i_i_fu_508_p1 = tmp_22_i_i_fu_503_p2;

assign tmp_25_i_i_fu_512_p2 = tmp_21_i_i_fu_500_p1 << sh_assign_4_i_i_cast_1_fu_494_p1;

assign tmp_26_i_fu_824_p3 = ((cos_basis_reg_1055[0:0] === 1'b1) ? tmp_fu_748_p18 : tmp_1_fu_786_p18);

assign tmp_26_i_i_fu_584_p1 = p_Result_18_fu_576_p3;

assign tmp_27_i_fu_484_p2 = ((tmp_V_reg_941 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_28_i_fu_324_p2 = ((tmp_V_1_reg_948 == 23'd0) ? 1'b1 : 1'b0);

assign tmp_29_i_fu_489_p2 = ((tmp_V_reg_941 == 8'd255) ? 1'b1 : 1'b0);

assign tmp_2_fu_878_p2 = (tmp_29_i_reg_1048 | or_cond_i_fu_831_p2);

assign tmp_3_fu_266_p4 = {{addr_V_fu_258_p3[7:4]}};

assign tmp_5_i_i_i_fu_276_p1 = tmp_3_fu_266_p4;

assign tmp_6_fu_281_p1 = addr_V_fu_258_p3[3:0];

assign tmp_7_fu_355_p1 = p_Val2_25_fu_349_p3[0:0];

assign tmp_7_i_i_i_fu_285_p1 = tmp_6_reg_965;

assign tmp_V_1_fu_242_p1 = p_Val2_s_fu_220_p1[22:0];

assign tmp_V_2_fu_728_p4 = {{p_Val2_20_fu_717_p1[30:23]}};

assign tmp_V_3_fu_738_p1 = p_Val2_20_fu_717_p1[22:0];

assign tmp_V_fu_232_p4 = {{p_Val2_s_fu_220_p1[30:23]}};

assign ush_fu_476_p3 = ((isNeg_fu_462_p3[0:0] === 1'b1) ? tmp_20_i_i_fu_470_p2 : sh_i_i_cast_fu_458_p1);


always @ (p_Result_17_fu_399_p3) begin
    if (p_Result_17_fu_399_p3[0] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd0;
    end else if (p_Result_17_fu_399_p3[1] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd1;
    end else if (p_Result_17_fu_399_p3[2] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd2;
    end else if (p_Result_17_fu_399_p3[3] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd3;
    end else if (p_Result_17_fu_399_p3[4] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd4;
    end else if (p_Result_17_fu_399_p3[5] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd5;
    end else if (p_Result_17_fu_399_p3[6] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd6;
    end else if (p_Result_17_fu_399_p3[7] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd7;
    end else if (p_Result_17_fu_399_p3[8] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd8;
    end else if (p_Result_17_fu_399_p3[9] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd9;
    end else if (p_Result_17_fu_399_p3[10] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd10;
    end else if (p_Result_17_fu_399_p3[11] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd11;
    end else if (p_Result_17_fu_399_p3[12] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd12;
    end else if (p_Result_17_fu_399_p3[13] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd13;
    end else if (p_Result_17_fu_399_p3[14] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd14;
    end else if (p_Result_17_fu_399_p3[15] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd15;
    end else if (p_Result_17_fu_399_p3[16] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd16;
    end else if (p_Result_17_fu_399_p3[17] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd17;
    end else if (p_Result_17_fu_399_p3[18] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd18;
    end else if (p_Result_17_fu_399_p3[19] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd19;
    end else if (p_Result_17_fu_399_p3[20] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd20;
    end else if (p_Result_17_fu_399_p3[21] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd21;
    end else if (p_Result_17_fu_399_p3[22] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd22;
    end else if (p_Result_17_fu_399_p3[23] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd23;
    end else if (p_Result_17_fu_399_p3[24] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd24;
    end else if (p_Result_17_fu_399_p3[25] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd25;
    end else if (p_Result_17_fu_399_p3[26] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd26;
    end else if (p_Result_17_fu_399_p3[27] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd27;
    end else if (p_Result_17_fu_399_p3[28] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd28;
    end else if (p_Result_17_fu_399_p3[29] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd29;
    end else if (p_Result_17_fu_399_p3[30] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd30;
    end else if (p_Result_17_fu_399_p3[31] == 1'b1) begin
        val_assign_fu_407_p3 = 32'd31;
    end else begin
        val_assign_fu_407_p3 = 32'd32;
    end
end

endmodule //sen
